import type { RemovalConfig } from "~/types.js";

export const REMOVAL_CONFIGS: Record<string, RemovalConfig> = {
  database: {
    name: "Database",
    dependencies: [
      "@prisma/client",
      "drizzle-orm",
      "@neondatabase/serverless",
      "postgres",
      "mysql2",
      "better-sqlite3",
      "@supabase/supabase-js",
    ],
    devDependencies: ["prisma", "drizzle-kit", "@types/better-sqlite3"],
    files: ["drizzle.config.ts", "prisma/schema.prisma"],
    directories: ["prisma", "drizzle", "src/db"],
    scripts: ["db:push", "db:pull", "db:generate", "db:studio"],
    envVars: [
      "DATABASE_URL",
      "POSTGRES_URL",
      "POSTGRES_PRISMA_URL",
      "POSTGRES_URL_NON_POOLING",
    ],
  },
  auth: {
    name: "Authentication",
    dependencies: [
      "next-auth",
      "@clerk/nextjs",
      "@auth0/nextjs-auth0",
      "better-auth",
      "@better-fetch/fetch",
    ],
    devDependencies: ["@types/next-auth", "@better-auth/cli"],
    files: [
      "src/lib/auth.ts",
      "src/lib/auth-client.ts",
      "src/app/api/auth/[...nextauth]/route.ts",
      "src/app/api/auth/[...all]/route.ts",
      "middleware.ts",
    ],
    directories: ["src/app/api/auth"],
    scripts: ["db:generate", "db:migrate"],
    envVars: [
      "NEXTAUTH_SECRET",
      "GITHUB_ID",
      "GITHUB_SECRET",
      "CLERK_SECRET_KEY",
      "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY",
      "AUTH0_SECRET",
      "AUTH0_BASE_URL",
      "AUTH0_ISSUER_BASE_URL",
      "AUTH0_CLIENT_ID",
      "AUTH0_CLIENT_SECRET",
      "BETTER_AUTH_SECRET",
      "BETTER_AUTH_URL",
    ],
  },
  payments: {
    name: "Payments",
    dependencies: ["stripe", "@polar-sh/sdk"],
    devDependencies: [],
    files: ["src/lib/stripe.ts", "src/app/api/stripe/webhook/route.ts"],
    directories: ["src/app/api/stripe"],
    scripts: [],
    envVars: [
      "STRIPE_SECRET_KEY",
      "STRIPE_WEBHOOK_SECRET",
      "STRIPE_PRICE_ID",
      "POLAR_TOKEN",
    ],
  },
  email: {
    name: "Email",
    dependencies: ["resend", "@sendgrid/mail"],
    devDependencies: [],
    files: ["src/lib/email.ts"],
    directories: [],
    scripts: [],
    envVars: ["RESEND_API_KEY", "SENDGRID_API_KEY"],
  },
  styling: {
    name: "Styling",
    dependencies: ["tailwindcss", "postcss", "autoprefixer", "@shadcn/ui"],
    devDependencies: [],
    files: [
      "tailwind.config.js",
      "postcss.config.js",
      "src/styles/globals.css",
    ],
    directories: ["src/components/ui"],
    scripts: [],
    envVars: [],
  },
  testing: {
    name: "Testing",
    dependencies: [],
    devDependencies: [
      "jest",
      "@types/jest",
      "ts-jest",
      "vitest",
      "@vitest/ui",
      "bun-types",
    ],
    files: ["jest.config.js", "vitest.config.ts"],
    directories: ["src/__tests__"],
    scripts: ["test", "test:ui", "test:watch"],
    envVars: [],
  },
  i18n: {
    name: "Internationalization",
    dependencies: [
      "next-intl",
      "next-international",
      "@lingui/react",
      "@lingui/core",
    ],
    devDependencies: ["@lingui/cli", "@lingui/macro"],
    files: [
      "src/i18n.ts",
      "src/middleware.ts",
      "lingui.config.ts",
      "src/i18n/index.ts",
    ],
    directories: ["src/messages", "src/locales", "src/i18n"],
    scripts: ["i18n:extract", "i18n:compile"],
    envVars: [],
  },
};
